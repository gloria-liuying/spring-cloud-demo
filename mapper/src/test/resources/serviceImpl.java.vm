package ${package.ServiceImpl};

import ${package.Entity}.${entity};
import ${package.Mapper}.${table.mapperName};
import ${package.Service}.${table.serviceName};
import ${superServiceImplClassPackage};
import java.util.Date;
import org.springframework.stereotype.Service;

/**
 * <p>
 * $!{table.comment} 服务实现类
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@Service
#if(${kotlin})
open class ${table.serviceImplName} : ${superServiceImplClass}<${table.mapperName}, ${entity}>(), ${table.serviceName} {

}
#else
public class ${table.serviceImplName} extends ${superServiceImplClass}<${table.mapperName}, ${entity}> implements ${table.serviceName} {
	#if(!$null.isNull(${logicDeleteFieldName})&&"$!logicDeleteFieldName" != "")
	#set($flag = false ) 
	#foreach($field in ${table.fields})
		#if(${field.name} == ${logicDeleteFieldName})
			#set($flag = true ) 
		#end
	#end
	#foreach($field in ${table.fields})
	#if(${field.keyFlag}&&$flag)
	@Override
	public boolean deleteById(Integer ${field.name},Integer updateUser){
		return updateById(new ${entity}() {{set${field.capitalName}(${field.name});setUpdateUser(updateUser);setUpdateTime(new Date());setDeleteFlag(1);}});
	}
	#end
	#end
	#end
}
#end
